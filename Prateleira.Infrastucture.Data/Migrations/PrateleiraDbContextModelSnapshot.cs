// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prateleira.Infrastructure.Data;

#nullable disable

namespace Prateleira.Infrastucture.Data.Migrations
{
    [DbContext(typeof(PrateleiraDbContext))]
    partial class PrateleiraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CategoriaProduto", b =>
                {
                    b.Property<int>("CategoriasId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutosId")
                        .HasColumnType("int");

                    b.HasKey("CategoriasId", "ProdutosId");

                    b.HasIndex("ProdutosId");

                    b.ToTable("CategoriaProduto");
                });

            modelBuilder.Entity("Prateleira.Domain.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("Prateleira.Domain.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("ESTOQUE", (string)null);
                });

            modelBuilder.Entity("Prateleira.Domain.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("PRODUTO", (string)null);
                });

            modelBuilder.Entity("CategoriaProduto", b =>
                {
                    b.HasOne("Prateleira.Domain.Categoria", null)
                        .WithMany()
                        .HasForeignKey("CategoriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prateleira.Domain.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prateleira.Domain.Estoque", b =>
                {
                    b.HasOne("Prateleira.Domain.Produto", "Produto")
                        .WithOne("Estoque")
                        .HasForeignKey("Prateleira.Domain.Estoque", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Prateleira.Domain.Qualitativo", "InfoCompra", b1 =>
                        {
                            b1.Property<int>("EstoqueId")
                                .HasColumnType("int");

                            b1.Property<decimal>("PrecoUnidade")
                                .HasPrecision(16, 4)
                                .HasColumnType("decimal(16,4)")
                                .HasColumnName("PRECO_UNITARIO");

                            b1.Property<int>("Quantidade")
                                .HasColumnType("int")
                                .HasColumnName("QUATIDADE");

                            b1.Property<int>("UnidadeMedida")
                                .HasColumnType("int")
                                .HasColumnName("UNIDADE_MEDIDA");

                            b1.HasKey("EstoqueId");

                            b1.ToTable("ESTOQUE");

                            b1.WithOwner()
                                .HasForeignKey("EstoqueId");
                        });

                    b.Navigation("InfoCompra")
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Prateleira.Domain.Produto", b =>
                {
                    b.Navigation("Estoque")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
